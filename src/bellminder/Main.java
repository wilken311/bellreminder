/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bellminder;

import java.awt.AWTException;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.Rectangle;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author user
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    int positionX=0;
    int positionY=0;
    
    int secVal = 0;
    int minVal = 1;
    int hrVal = 1;
    int duration = 20; //20 Minutes default
    int timeExpiration = duration;
    boolean isStart = true;
    
    public Main() {
        setUndecorated(true); //Remove top bar on JFrame
        initComponents();
        setOpacity(0.9f);
        
        //Set the location on the top-right corner.
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
        Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
        int x = (int) rect.getMaxX() - this.getWidth();
        int y = 0;
        this.setLocation(x, y);
      
        timer();
        startBtn.setEnabled(false);
        resetBtn.setEnabled(false);
        
        //JFrame Icon
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/bell32.png")));
        
        //System Tray
        if(SystemTray.isSupported()==true){
            setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
        }
        
        SystemTray systemTray = SystemTray.getSystemTray();
        TrayIcon trayIcon = new TrayIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/bell16.png")));
        PopupMenu popMenu = new PopupMenu();
        
        MenuItem show = new MenuItem("Show");
        show.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                setVisible(true);
             }
        });
        
        MenuItem exit = new MenuItem("Exit");
        exit.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                System.exit(0);
             }
        });
        
        popMenu.add(show);
        popMenu.add(exit);
        
        trayIcon.setPopupMenu(popMenu);
        try {
            systemTray.add(trayIcon);
        } catch (AWTException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        hrTxt = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        minTxt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        secTxt = new javax.swing.JLabel();
        resetBtn = new javax.swing.JButton();
        stopBtn = new javax.swing.JButton();
        startBtn = new javax.swing.JButton();
        setTimeTxt = new javax.swing.JLabel();
        Developer = new javax.swing.JLabel();
        hide = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bell");
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        hrTxt.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        hrTxt.setForeground(new java.awt.Color(255, 255, 255));
        hrTxt.setText("00");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText(":");

        minTxt.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        minTxt.setForeground(new java.awt.Color(255, 255, 255));
        minTxt.setText("00");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText(":");

        secTxt.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        secTxt.setForeground(new java.awt.Color(255, 255, 255));
        secTxt.setText("00");

        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/reset.png"))); // NOI18N
        resetBtn.setToolTipText("Reset");
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetBtnMouseClicked(evt);
            }
        });

        stopBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stop.png"))); // NOI18N
        stopBtn.setToolTipText("Stop");
        stopBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopBtnMouseClicked(evt);
            }
        });
        stopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBtnActionPerformed(evt);
            }
        });

        startBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/start.png"))); // NOI18N
        startBtn.setToolTipText("Start");
        startBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startBtnMouseClicked(evt);
            }
        });
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        setTimeTxt.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        setTimeTxt.setForeground(new java.awt.Color(255, 255, 255));
        setTimeTxt.setText("00:20:00");
        setTimeTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setTimeTxtMouseClicked(evt);
            }
        });

        Developer.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        Developer.setForeground(new java.awt.Color(255, 255, 255));
        Developer.setText("WM");
        Developer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeveloperMouseClicked(evt);
            }
        });

        hide.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        hide.setForeground(new java.awt.Color(255, 255, 255));
        hide.setText("X");
        hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(startBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(setTimeTxt)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(hrTxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(minTxt)
                                .addGap(6, 6, 6)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(secTxt)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(resetBtn))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(hide)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Developer)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minTxt)
                    .addComponent(jLabel1)
                    .addComponent(secTxt)
                    .addComponent(hrTxt)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resetBtn)
                    .addComponent(stopBtn)
                    .addComponent(startBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setTimeTxt)
                    .addComponent(Developer)
                    .addComponent(hide))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startBtnMouseClicked
        isStart=true;
        startBtn.setEnabled(false);
        resetBtn.setEnabled(false);
        stopBtn.setEnabled(true);
        timer();
    }//GEN-LAST:event_startBtnMouseClicked

    private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseClicked
        reset();
        isStart = true;
        startBtn.setEnabled(true);
        resetBtn.setEnabled(false);
        stopBtn.setEnabled(false);
        timeExpiration=duration;
       
    }//GEN-LAST:event_resetBtnMouseClicked
    
    public void reset(){
        hrTxt.setText("00");
        minTxt.setText("00");
        secTxt.setText("00");
        secVal = 0;
        minVal = 1;
        hrVal = 1;
    }
    
    private void stopBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopBtnMouseClicked
        isStart=false;
        stopBtn.setEnabled(false);
        startBtn.setEnabled(true);
        resetBtn.setEnabled(true);
    }//GEN-LAST:event_stopBtnMouseClicked

    private void stopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBtnActionPerformed
        
    }//GEN-LAST:event_stopBtnActionPerformed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
     
    }//GEN-LAST:event_startBtnActionPerformed

    private void setTimeTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setTimeTxtMouseClicked
             String time = "00:00:00";
             String input = JOptionPane.showInputDialog("Set Time in Minutes");
             if(input!=null){
                    int min = Integer.parseInt(input);
                    if(min>1440){
                          JOptionPane.showMessageDialog(null, "Minutes must not greater than 1440 (24hrs)!",
             "Ooops!", JOptionPane.ERROR_MESSAGE);
                    } else {

                       //If input is greater than 60min. For hours
                       if(min>=60){
                           time = String.format("%02d", min/60)+":"+String.format("%02d", min%60)+":00";
                       //For minutes
                       } else {
                           time = "00:"+String.format("%02d", min%60)+":00";
                       }

                       reset();
                       duration=min;
                       timeExpiration = duration;
                       isStart = false;
                       startBtn.setEnabled(true);
                       stopBtn.setEnabled(false);
                       setTimeTxt.setText(time);
                    }
             }
             
             
    }//GEN-LAST:event_setTimeTxtMouseClicked

    private void DeveloperMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeveloperMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DeveloperMouseClicked

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        setLocation(evt.getXOnScreen()-positionX, evt.getYOnScreen()-positionY);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void hideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideMouseClicked
        setVisible(false);
    }//GEN-LAST:event_hideMouseClicked

 
    public void timer(){
        DecimalFormat formatter = new DecimalFormat("00");
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {  
                //Stop the timer, if Stop button is clicked.
                if(isStart == false){
                    timer.cancel();
                }
                
                int secCount = secVal++;
                
                //If 60 seconds is done, add 1 on the minute.
                if(secCount==60){
                    secVal=1;
                    secTxt.setText("00");
                    int minCount =minVal++;
                    timeExpiration--; //Reduce the number of duration every minute until it becomes 0.                
                    
                    //FOR MINUTES FORMAT CONDITION(e.g 00:20:00).
                    //If duration set by the user is less than or equal 60 min
                    if(duration<=60){
                        
                        //If time is expire (e.g 0) then reset all the value
                        if(timeExpiration==0){
                            sound();
                            minCount=0;
                            minVal=1;
                            minTxt.setText(String.valueOf(formatter.format(minCount)));
                            timeExpiration=duration;
                        } else {
                         minTxt.setText(String.valueOf(formatter.format(minCount)));
                        }
                    }
                    
                    //FOR HOURLY FORMAT CONDITION(e.g 01:30:00).
                    //If duration set by the user is greater than 60 min.
                    if(duration>60){
                        
                        //If time is expire (e.g 0) then reset all the value
                        if(timeExpiration==0){
                            sound();
                            timeExpiration=duration;
                            //Reset Minute
                            minCount=0;
                            minVal=1;
                            minTxt.setText(String.valueOf(formatter.format(minCount)));
                            //Reset hours
                            hrVal=1;
                            hrTxt.setText(String.valueOf(formatter.format(0)));
                        }
                     
                        //Condition for hours.
                        //If minutes is exceeds 60min. Add 1 on the hour.
                        if(minCount >=60 ){
                            int hrCount = hrVal++;
                            //Add 1 on the hour
                            hrTxt.setText(String.valueOf(formatter.format(hrCount)));
                            //Reset Minute
                            minCount=0;
                            minVal=1;
                            minTxt.setText(String.valueOf(formatter.format(minCount)));
                        }
                        //Condition for minutes.
                        //If minutes is not yet exceeds 60min. Add 1 on the minute.
                        else {
                             minTxt.setText(String.valueOf(formatter.format(minCount)));
                        }
                    }
                } else {
                   secTxt.setText(String.valueOf(formatter.format(secCount)));
                }   
            }
        }, 0, 1000);
       
       
    }
    
    public void sound(){
            try {
                File f = new File("./bell.wav");
                AudioInputStream audioIn = AudioSystem.getAudioInputStream(f.toURI().toURL());  
                Clip clip = AudioSystem.getClip();
                clip.open(audioIn);
                clip.start();
            } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
               System.err.println(e.getMessage());
            }  
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Developer;
    private javax.swing.JLabel hide;
    private javax.swing.JLabel hrTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel minTxt;
    private javax.swing.JButton resetBtn;
    private javax.swing.JLabel secTxt;
    private javax.swing.JLabel setTimeTxt;
    private javax.swing.JButton startBtn;
    private javax.swing.JButton stopBtn;
    // End of variables declaration//GEN-END:variables
}
